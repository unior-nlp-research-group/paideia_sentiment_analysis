library(tidyverse)
library(ggplot2)
library(tokenizers)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(udpipe)
library(stopwords)
library(R.utils)
library(tm)
#ricarichiamo il nostro file di testo
my_data <- read_excel("../materiali/dataset.xlsx")
my_data <- data.frame(my_data)
my_data$id <- seq(1:nrow(my_data))
sw <- stopwords("it")
testi <- my_data$Text
style <- my_data$Style
library(readxl)
#ricarichiamo il nostro file di testo
my_data <- read_excel("../materiali/dataset.xlsx")
my_data <- data.frame(my_data)
my_data$id <- seq(1:nrow(my_data))
sw <- stopwords("it")
testi <- my_data$Text
style <- my_data$Style
#tokenizzazione ed eliminazione stop word
tokens_full <- tokenize_words(testi)
tokens_full <- tokens_full[!tokens_full %in% sw]
my_data$Style[my_data$Style == "positivr"] = "positive"
my_data$Style <- ifelse(is.na(my_data$Style),
"not applicable",
my_data$Style)
testi_positive <- my_data[my_data$Style=="positive",]$Text
tokens_positive <- unlist(tokenize_words(testi_positive))
tokens_positive <- tokens_positive[!tokens_positive %in% sw]
set.seed(1234)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=1.6,
colors=brewer.pal(8, "Dark2"))
tokens_positive <- tokens_positive[!tolowe(tokens_positive) %in% sw]
tokens_positive <- tokens_positive[!tolower(tokens_positive) %in% sw]
set.seed(1234)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=1.6,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=3,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=5,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=1.6,
colors=brewer.pal(8, "Dark2"))
tokens_positive <- tolower(tokens_positive[!tokens_positive %in% sw])
set.seed(1234)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=1.6,
colors=brewer.pal(8, "Dark2"))
testi_positive <- my_data[my_data$Style=="positive",]$Text
tokens_positive <- unlist(tokenize_words(testi_positive))
tokens_positive <- tokens_positive[!tokens_positive %in% sw]
set.seed(1234)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE, size=1.6,
colors=brewer.pal(8, "Dark2"))
warnings()
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 1,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"))
warnings()
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 10,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 100,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 50,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 50,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"),
res=300)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 50,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"),
res=500)
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 50,
max.words=200, random.order=FALSE,
colors=brewer.pal(8, "Dark2"),
scale=c(3.5,0.25))
wordcloud(words = tokens_positive, freq = as.data.frame(table(tokens_positive))$Freq, min.freq = 50,
max.words=1000, random.order=FALSE,
colors=brewer.pal(8, "Dark2"),
scale=c(3.5,0.25))
my_data$style_num <- ifelse(
my_data$Style=='positive',
1,
-1
)
my_data$style_num
ggplot(my_data)+
geom_bar(aes(y=Style, fill=Style))
#**visualizziamo le valenze nel dataset estratte attraverso NRC**
#*
calcolare_sentiment_nrc <- function(frase_input){
tokens <- unlist(tokenize_words(frase_input))
tokens_clean <- tokens[!tokens %in% sw]
sentiment_values <- nrc_table[is.element(nrc_table$`Italian-it`, tokens_clean),]$Valence
return(mean(sentiment_values))
}
sentiment_values <- unlist(lapply(testi, calcolare_sentiment_nrc))
sentiment_values[is.na(sentiment_values)] <- 0
#importare lessico esterno
nrc_table <- as.data.frame(
fread('../materiali/NRC-VAD-Lexicon-Aug2018Release/OneFilePerLanguage/Italian-it-NRC-VAD-Lexicon.txt'
)
)
#**visualizziamo le valenze nel dataset estratte attraverso NRC**
#*
#*
#*
nrc_table <- as.data.frame(
fread('./NRC-VAD-Lexicon-Aug2018Release/OneFilePerLanguage/Italian-it-NRC-VAD-Lexicon.txt'
)
)
library(r.table)
library(data.table)
#**visualizziamo le valenze nel dataset estratte attraverso NRC**
#*
#*
#*
nrc_table <- as.data.frame(
fread('./NRC-VAD-Lexicon-Aug2018Release/OneFilePerLanguage/Italian-it-NRC-VAD-Lexicon.txt'
)
)
#**visualizziamo le valenze nel dataset estratte attraverso NRC**
#*
#*
#*
nrc_table <- as.data.frame(
fread('../materiali/NRC-VAD-Lexicon-Aug2018Release/OneFilePerLanguage/Italian-it-NRC-VAD-Lexicon.txt'
)
)
head(nrc_table)
calcolare_sentiment_nrc <- function(frase_input){
tokens <- unlist(tokenize_words(frase_input))
tokens_clean <- tokens[!tokens %in% sw]
sentiment_values <- nrc_table[is.element(nrc_table$`Italian-it`, tokens_clean),]$Valence
return(mean(sentiment_values))
}
sentiment_values <- unlist(lapply(testi, calcolare_sentiment_nrc))
sentiment_values[is.na(sentiment_values)] <- 0
sentiment_values_dataframe <- data.frame(
testi, sentiment_values
)
sentiment_values_dataframe  <- sentiment_values_dataframe[
order(-sentiment_values_dataframe$sentiment_values)
,]
sentiment_values_dataframe$index <- seq(
from=1,
to=nrow(sentiment_values_dataframe),
by=1)
ggplot(sentiment_values_dataframe)+
geom_bar(aes(x=seq(1:nrow(sentiment_values_dataframe)+1),
y=sentiment_values,
color=sentiment_values,
), stat='identity')
